{"version":3,"sources":["webpack:///webpack/bootstrap f0d79b2cac2a2c6e6d93","webpack:///./lib/mockina.js","webpack:///./lib/game.js","webpack:///./lib/movement.js","webpack:///./lib/x_mockina.js","webpack:///./lib/board.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;;;;;;;;;AClBA;AACA;AACA;;AAEA;;;;AAIA;;AAEA;AACA;AACA;AACA;;;AAGA;;;;;;;;ACjBA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA,oBAAmB,WAAW;AAC9B,sDAAqD,EAAE;AACvD;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA,qCAAoC;AACpC;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACrDA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,sCAAqC,IAAI;AACzC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA8B;AAC9B;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,2EAA0E,+EAA+E;AACzJ,2EAA0E,+EAA+E;AACzJ,yEAAwE,+EAA+E;;AAEvJ;AACA;AACA;;;AAGA;;AAEA;;;;;;;AC7DA;AACA;AACA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAsB;AACtB,uBAAsB;AACtB,uBAAsB;AACtB,uBAAsB;AACtB,uBAAsB;AACtB,uBAAsB;AACtB,uBAAsB;AACtB,uBAAsB;AACtB,uBAAsB;AACtB,uBAAsB;AACtB,uBAAsB;;AAEtB,uBAAsB;AACtB,uBAAsB;AACtB,uBAAsB;AACtB,uBAAsB;AACtB,uBAAsB;AACtB,uBAAsB;AACtB,uBAAsB;AACtB,uBAAsB;AACtB,uBAAsB;AACtB,uBAAsB;AACtB,uBAAsB;;AAEtB;AACA;AACA;;AAEA","file":"./lib/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap f0d79b2cac2a2c6e6d93","const Game = require(\"./game\");\nconst Movement  = require(\"./movement\");\nconst XMockina  = require(\"./x_mockina\");\nconst Board = require(\"./board\");\n\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const canvasEl = document.getElementsByTagName(\"canvas\")[0];\n  const ctx = canvasEl.getContext(\"2d\");\n  canvasEl.width = Game.DIM_X;\n  canvasEl.height = Game.DIM_Y;\n  const board = new Board(ctx);\n  board.render();\n  const xmockina = new XMockina(ctx, board);\n  const movement = new Movement(xmockina);\n  xmockina.render();\n\n\n\n}\n);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/mockina.js\n// module id = 0\n// module chunks = 0","\n\nclass Game {\n  constructor() {\n    this.board = [];\n\n  }\n\n\n\n}\n\nGame.BG_COLOR = \"#C0C0C0\";\nGame.DIM_X = 600;\nGame.DIM_Y = 400;\nGame.FPS = 32;\n\n\nmodule.exports = Game;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/game.js\n// module id = 1\n// module chunks = 0","\nclass Movement {\n  constructor(xmockina) {\n    this.xmockina = xmockina;\n    this.moves = [];\n    // this.direction = 0;\n\n    this.addStart();\n    this.buildMoves();\n    // this.runProgram();\n  }\n\n  addStart() {\n    document.getElementById(\"start\").addEventListener(\"click\", () => {\n      this.buildMoves();\n    });\n  }\n\n  buildMoves() {\n    let count = 8;\n    this.moves = [];\n    for (let i = 0; i < count; i++) {\n      this.moves.push(document.getElementById(`move${i}`).value);\n    }\n    this.runProgram();\n    console.log(this.moves);\n  }\n\n\n  runProgram(i=0) {\n    setTimeout(() => {\n      if (i >= 8) {\n        clearTimeout(moveTimeout);\n      }\n      if (this.moves[i] === \"move\"){\n        this.xmockina.move();\n      }\n      if (this.moves[i] === \"wait\"){ }\n      if (this.moves[i] === \"left\"){\n        this.xmockina.turn(-1);\n      }\n      if (this.moves[i] === \"right\"){\n        this.xmockina.turn(1);\n      }\n      if (this.moves[i] === \"pick\"){ console.log(\"pick\");}\n      i++;\n      this.runProgram(i);\n    },1000 );\n\n  }\n}\n// let Movement = new Movement();\n// Movement.DIR = this.direction;\n// console.log(this.direction);\nmodule.exports = Movement;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/movement.js\n// module id = 2\n// module chunks = 0","\nclass XMockina {\n  constructor(ctx, board) {\n    this.ctx = ctx;\n    this.board = board;\n    this.currentPosition = [50,50];\n    this.nextPosition = [50,50];\n    this.direction = 1;\n\n    this.move;\n    this.turn;\n    this.render;\n  }\n\n  render() {\n    let ctx = this.ctx;\n    let oldX = this.currentPosition[0];\n    let oldY = this.currentPosition[1];\n    ctx.clearRect(0,0 , 400, 600);\n    ctx.clearRect(oldX, oldY,  50,  50);\n\n    this.board.render();\n    const base_image = new Image();\n    let xPos = this.nextPosition[0];\n    let yPos = this.nextPosition[1];\n    let dir = this.direction;\n    base_image.src = `assets/robot_${dir}.png`;\n    base_image.onload = function(){\n      ctx.drawImage(base_image, xPos, yPos);\n    };\n    this.currentPosition = [xPos, yPos];\n  }\n\n  turn(num) {\n    if (num) {\n      console.log(this.direction);\n      this.direction = (this.direction += num);\n      console.log(this.direction);\n      this.direction = (this.direction % 4);\n      if (this.direction < 0){ this.direction += 4;}\n      console.log(this.direction);\n      this.render();\n    }\n\n  }\n\n  move()  {\n    console.log(this.currentPosition);\n    if ((this.direction === 0) && (this.currentPosition[1] - 50) >= 0) {\n      this.nextPosition = [this.currentPosition[0], (this.currentPosition[1] - 50)];};\n    if ((this.direction === 1) && (this.currentPosition[0] + 50) <= 600 ){ this.nextPosition = [(this.currentPosition[0] + 50), this.currentPosition[1]]; };\n    if ((this.direction === 2) && (this.currentPosition[1] + 50) <= 400) { this.nextPosition = [this.currentPosition[0], (this.currentPosition[1] + 50)]; };\n    if ((this.direction === 3) && (this.currentPosition[0] - 50) >= 0) { this.nextPosition = [(this.currentPosition[0] - 50), this.currentPosition[1]]; };\n\n    console.log(this.currentPosition);\n    this.render();\n  };\n\n\n}\n\nmodule.exports = XMockina;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/x_mockina.js\n// module id = 3\n// module chunks = 0","class Board {\n  constructor(ctx){\n    this.ctx = ctx;\n\n\n\n\n  }\n  render() {\n    const ctx = this.ctx;\n    ctx.clearRect(0, 0, 600, 400);\n    ctx.fillStyle = \"black\";\n    ctx.fillRect(0, 0, 600, 400);\n    ctx.strokeStyle = \"red\";\n    ctx.beginPath();\n    ctx.moveTo(0, 50); ctx.lineTo(600, 50);\n    ctx.moveTo(0,100); ctx.lineTo(600, 100);\n    ctx.moveTo(0,150); ctx.lineTo(600, 150);\n    ctx.moveTo(0,200); ctx.lineTo(600, 200);\n    ctx.moveTo(0,250); ctx.lineTo(600, 250);\n    ctx.moveTo(0,300); ctx.lineTo(600, 300);\n    ctx.moveTo(0,350); ctx.lineTo(600, 350);\n    ctx.moveTo(0,400); ctx.lineTo(600, 400);\n    ctx.moveTo(0,450); ctx.lineTo(600, 450);\n    ctx.moveTo(0,500); ctx.lineTo(600, 500);\n    ctx.moveTo(0,550); ctx.lineTo(600, 550);\n\n    ctx.moveTo(50, 0); ctx.lineTo(50, 400);\n    ctx.moveTo(100,0); ctx.lineTo(100, 400);\n    ctx.moveTo(150,0); ctx.lineTo(150, 400);\n    ctx.moveTo(200,0); ctx.lineTo(200, 400);\n    ctx.moveTo(250,0); ctx.lineTo(250, 400);\n    ctx.moveTo(300,0); ctx.lineTo(300, 400);\n    ctx.moveTo(350,0); ctx.lineTo(350, 400);\n    ctx.moveTo(400,0); ctx.lineTo(400, 400);\n    ctx.moveTo(450,0); ctx.lineTo(450, 400);\n    ctx.moveTo(500,0); ctx.lineTo(500, 400);\n    ctx.moveTo(550,0); ctx.lineTo(550, 400);\n\n    ctx.stroke();\n  };\n}\n\nmodule.exports = Board;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/board.js\n// module id = 4\n// module chunks = 0"],"sourceRoot":""}